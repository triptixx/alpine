version: "1.0"

stages:
  - clone
  - build
  - test
  - publish

steps:
  main_clone:
    type: "git-clone"
    stage: "clone"
    title: "Cloning main repository"
    git: "github"
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_REVISION}}"
  build:
    type: "build"
    stage: "build"
    title: "Building Docker Image"
    image_name: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}-dev"
    tag: "${{ALPINE_TAG}}"
    build_arguments:
      - ALPINE_TAG=${{ALPINE_TAG}}
  test:
    stage: "test"
    title: "Running Unit tests"
    image: "${{build}}"
    commands:
      - "su-exec nobody apk --version"
    on_success:
      metadata:
        set:
          - "${{build.imageId}}":
            - CF_QUALITY: true
    on_fail:
      metadata:
        set:
          - "${{build.imageId}}":
            - CF_QUALITY: false
  publish:
    type: parallel
    stage: "publish"
    steps:
      publishtag:
        type: "push"
        title: "Pushing to a registry"
        candidate: "${{build}}"
        image_name: "${{DOCKER_USERNAME}}/${{CF_REPO_NAME}}"
        credentials:
          username: "${{DOCKER_USERNAME}}"
          password: "${{DOCKER_PASSWORD}}"
        tag: "${{ALPINE_TAG}}"
      publishlatest:
        type: "push"
        title: "Pushing to a registry"
        candidate: "${{build}}"
        image_name: "${{DOCKER_USERNAME}}/${{CF_REPO_NAME}}"
        credentials:
          username: "${{DOCKER_USERNAME}}"
          password: "${{DOCKER_PASSWORD}}"
        tag: "latest"
        when:
          condition:
            all:
              islatest: '"${{LATEST}}" == "true"'
    when:
      branch:
        only:
          - master
        steps:
          - name: "test"
            on:
              - success
