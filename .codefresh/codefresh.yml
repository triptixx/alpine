version: "1.0"

indicators:
  - publish: &push
      type: "push"
      stage: "publish"
      title: "Pushing to a registry"
      candidate: "${{build}}"
      image_name: "${{DOCKER_USERNAME}}/${{CF_REPO_NAME}}"
      registry: dockerhub
  - when: &condition
      branch:
        only:
          - master
      steps:
        - name: "test"
          on:
            - success

stages:
  - clone
  - build
  - test
  - publish

steps:
  main_clone:
    type: "git-clone"
    stage: "clone"
    title: "Cloning main repository"
    git: "github"
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_REVISION}}"
  build:
    type: "build"
    stage: "build"
    title: "Building Docker Image"
    image_name: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}-dev"
    tag: "${{ALPINE_TAG}}"
    build_arguments:
      - ALPINE_TAG=${{ALPINE_TAG}}
#      - BUILD_DATE=`date -d @$((${{CF_BUILD_TIMESTAMP}} / 1000)) +'%Y-%m-%dT%H:%M:%SZ'`
      - BUILD_DATE=${{CF_BUILD_TIMESTAMP}}
      - VCS_REF=${{CF_SHORT_REVISION}}
      - VCS_URL=https://github.com/${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
      - VENDOR=${{CF_REPO_OWNER}}
  test:
    stage: "test"
    title: "Running Unit tests"
    image: "${{build}}"
    commands:
      - "su-exec nobody apk --version"
    on_success:
      metadata:
        set:
          - "${{build.imageId}}":
            - CF_QUALITY: true
    on_fail:
      metadata:
        set:
          - "${{build.imageId}}":
            - CF_QUALITY: false
  publishtag:
    <<: *push
    tag: "${{ALPINE_TAG}}"
    when: *condition
  publishlatest:
    <<: *push
    tag: "latest"
    when:
      <<: *condition
      condition:
        all:
          islatest: '"${{LATEST}}" == "true"'
